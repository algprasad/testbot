<?xml version="1.0"?>
<robot name="testbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- http://answers.ros.org/question/38956/pass-parameters-to-xacro-in-launch-file/ -->
<xacro:property name="pi" value="3.1415926535897931" />
<xacro:property name="seg_length" value="0.2" />
<xacro:property name="seg_width" value="0.15" />
<xacro:property name="seg_height" value="0.1" />

<xacro:property name="cyl_div" value="4.0" />

<!--
    Wheel
    =====
 -->
<xacro:macro name="wheel" params="dir parent postfix length width height">
<!-- the name doesn't actually do anything, was hoping maybe it would
       allow multiple visuals within the same link -->
  <link name="link_wheel_${postfix}">
    <visual>
      <!-- use this when using the cylinder primitive, the mesh doesn't align --> 
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder length="${length/4}" radius="${length/4}" />
          <!-- TODO rotate the mesh so it aligns with the cylinder -->
          <!--mesh filename="package://testbot_description/meshes/cylinder.dae" scale="${length/4} ${length/8} ${length/4}" /-->
        </geometry>
    </visual>
    <!--visual name="vis2_${postfix}">
        <origin xyz="0 -${length} 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://testbot_description/meshes/cylinder.dae" scale="${length/4} ${length/8} ${length/4}" />
        </geometry>
    </visual-->
    
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <cylinder length="${length/4}" radius="${length/4}" />
      </geometry>
    </collision>

    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="2" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial>
  
  </link>

  <!-- wheel axle -->
  <joint name="joint_axle_${postfix}" type="continuous">
        <parent link="${parent}" />
        <child link="link_wheel_${postfix}" />
        <origin xyz="${length/2} ${dir * length/1.8} ${-length/4}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <limit effort="1000.0" velocity="0.5" />
  </joint>

</xacro:macro>
<!--
  end wheel
  -->

<!--
  Segment
  =======
-->
<xacro:macro name="segment" params="parent postfix length width height">
  <!-- the segment -->
  <link name="link_${postfix}">
    <visual>
        <origin xyz="${length/2} 0 0" rpy="0 0 0" />
        <geometry>
          <!--box size="${length} ${width} ${height}" /-->
          <mesh filename="package://testbot_description/meshes/cube.dae" 
              scale="${length/3} ${width/2} ${height/2}" />
        </geometry>
        <material name="grey_${postfix}">
          <color rgba="0.5 0.5 0.5 1" />
        </material>
    </visual>
    
    <collision>
      <origin xyz="${length/2} 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${length/2} ${width/2} ${height/2}" />
      </geometry>
    </collision>

    <inertial>
        <origin xyz="${length/2} 0 0" rpy="0 0 0" />
        <mass value="20.0" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial>
  
  </link>

  <gazebo reference="link_${postfix}">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>

  <!-- This link is just here to provide a visual for the joint -->
  <xacro:if value="false">
  <link name="link_jointviz_${postfix}">
    <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <!--box size="${length} ${width} ${height}" /-->
          <mesh filename="package://testbot_description/meshes/cylinder.dae" scale="${length/cyl_div} ${0.5 * length/cyl_div} ${length/cyl_div}" />
        </geometry>
        <material name="grey_${postfix}">
          <color rgba="0.3 0.3 0.3 1" />
        </material>
    </visual>
    
    <!-- Do I need this? Wouldn't want thin things to fall between segments -->
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${0.5 * length/cyl_div}" radius="${length/cyl_div}" />
      </geometry>
    </collision>

    <!-- Do I need this? -->
    <!--inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="1.0" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial-->
  
  </link>
  
  <!-- this is just for visual purpose -->
  <joint name="joint_linkviz_${postfix}" type="fixed">
        <parent link="${parent}" />
        <child link="link_jointviz_${postfix}" />
        <origin xyz="${length} 0 0" rpy="0 0 0" />
        <axis xyz="0 0 1" />
  </joint>
  </xacro:if>

  <!-- this is a functional joint between segments -->
  <joint name="joint_seg_${postfix}" type="revolute">
        <parent link="${parent}" />
        <child link="link_${postfix}" />
        <origin xyz="${length} 0 0" rpy="0 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="1000.0" lower="-0.5" upper="0.5" velocity="0.5" />
        <dynamics damping="0.5" />
  </joint>

  <transmission name="tran_joint_seg_${postfix}">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_seg_${postfix}" />
    <actuator name="motor_seg_${postfix}">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- wheels -->
  <xacro:if value="true">
  <xacro:wheel parent="link_${postfix}" postfix="right_${postfix}" dir="1.0" length="${length}" width="${width}" height="${height}"  />
  <xacro:wheel parent="link_${postfix}" postfix="left_${postfix}" dir="-1.0" length="${length}" width="${width}" height="${height}"  />
  </xacro:if>

</xacro:macro>
<!--
  End segment section
  ===================
-->


<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <!-- will default to robot name -->
    <robotNamespace>/testbot</robotNamespace>
    <!-- TBD rename this later -->
    <robotParam>/robot_description</robotParam>
    <!--robotParam>/testbot/robot_description</robotParam>
    -->
  </plugin>
</gazebo>

<link name="base_link"/>

<link name="head">
    <visual>
        <origin xyz="${seg_length/2} 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://testbot_description/meshes/cube.dae" 
              scale="${seg_length/3} ${seg_width/2} ${seg_height/2}" />
          <!--mesh filename="package://testbot_description/meshes/cylinder.dae" scale="${seg_length/3} ${seg_length/6} ${seg_length/3}" /-->
        </geometry>
    </visual>
   
    <collision>
      <origin xyz="${seg_length/2} 0 0" rpy="0 0 0" />
      <geometry>
          <mesh filename="package://testbot_description/meshes/cube.dae" 
              scale="${seg_length/3} ${seg_width/2} ${seg_height/2}" />
        <!--cylinder length="${seg_length/6}" radius="${seg_length/3}" /-->
      </geometry>
    </collision>

    <inertial>
        <origin xyz="${seg_length/2} 0 0" rpy="0 0 0" />
        <mass value="1" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial>

</link>
 
  <joint name="joint_base_head" type="fixed">
        <parent link="base_link" />
        <child link="head" />
        <origin xyz="0 0 0" rpy="0 0 0" />
  </joint>

<!-- this one doesn't work correctly because it is attached to a fixed link -->
<gazebo reference="head">
  <projector name="projector_test_head">
    <!-- none of the translations or rotations applied here have any effect -->
    <pose>${seg_length/2} 0 0 1.57 0 0</pose>
    <texture>test_pattern.png</texture>
    <!--texture>stereo_projection_pattern_high_res_red.png</texture-->
    <fov>0.95</fov>
    <near_clip>0.1</near_clip>
    <far_clip>10.0</far_clip>
  </projector>
</gazebo>

<!-- try putting a projector onto another link -->
<joint name="joint_projector_test_1" type="revolute">
  <parent link="head" />
  <child link="link_projector_test_1" />
  <origin xyz="0 0.23 0" rpy="0 0 0" />
  <axis xyz="0 1 0" />
  <limit effort="1000.0" upper="0.0001" lower="-0.0001" velocity="0.5" />
</joint>
<!-- this works fine because it is attached to a revolute jointed link-->
<link name="link_projector_test_1">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.05 0.05 0.05"/>     
      </geometry>
    </visual>
   
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.05 0.05 0.05"/>     
      </geometry>
    </collision>

    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="1" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial>
</link>

<gazebo reference="link_projector_test_1">
  <projector name="projector_test_1">
    <!-- setting the pose will produce glitches even when attached to a revolute joint -->
    <pose>0 0 0 0 1.57 0</pose>
    <texture>test_pattern.png</texture>
    <!--texture>stereo_projection_pattern_high_res_red.png</texture-->
    <fov>0.95</fov>
    <near_clip>0.1</near_clip>
    <far_clip>10.0</far_clip>
  </projector>
</gazebo>
  
<xacro:segment parent="head" postfix="1" length="${seg_length}" width="${seg_width}" height="${seg_height}" />
<xacro:segment parent="link_1" postfix="2" length="${seg_length}" width="${seg_width}" height="${seg_height}" />
<xacro:segment parent="link_2" postfix="3" length="${seg_length}" width="${seg_width}" height="${seg_height}" />
<!--
<xacro:segment parent="link_3" postfix="4" length="${seg_length}" width="${seg_width}" height="${seg_height}" />
<xacro:segment parent="link_4" postfix="5" length="${seg_length}" width="${seg_width}" height="${seg_height}" />
<xacro:segment parent="link_5" postfix="6" length="${seg_length}" width="${seg_width}" height="${seg_height}" />
-->

</robot>
